
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.awt.FontMetrics;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.Rectangle;
import java.awt.Shape;
import java.awt.image.ImageObserver;
import java.text.AttributedCharacterIterator;
import java.util.HashMap;
import javax.swing.BorderFactory;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.ListCellRenderer;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author markoc
 */
public class MealListItemRenderer extends javax.swing.JPanel implements ListCellRenderer{
    boolean isPrinted = false;
    int selectedIndex = -1;
    /**
     * Creates new form MealListItem
     */
    public MealListItemRenderer() {
        initComponents();
    }
    
    public MealListItemRenderer(boolean isPrinted, int selectedIndex)
    {
        this();
        this.isPrinted = isPrinted;
        this.selectedIndex = selectedIndex;
    }
    
    @Override
    public Component getListCellRendererComponent(
            JList list, Object value, int index,
            boolean isSelected, boolean cellHasFocus) {
            String[] part = value.toString().split("<break/>");
            
            HashMap<String, ImageIcon> iconMap = new HashMap<>(14);
            iconMap.put("1", new ImageIcon("src/allergens/images/wheat.png"));
            iconMap.put("2", new ImageIcon("src/allergens/images/crustances.png"));
            iconMap.put("3", new ImageIcon("src/allergens/images/eggs.png"));
            iconMap.put("4", new ImageIcon("src/allergens/images/fish.png"));
            iconMap.put("5", new ImageIcon("src/allergens/images/peanut.png"));
            iconMap.put("6", new ImageIcon("src/allergens/images/soya.png"));
            iconMap.put("7", new ImageIcon("src/allergens/images/milk.png"));
            iconMap.put("8", new ImageIcon("src/allergens/images/treenut.png"));
            iconMap.put("9", new ImageIcon("src/allergens/images/celery.png"));
            iconMap.put("10", new ImageIcon("src/allergens/images/mustard.png"));
            iconMap.put("11", new ImageIcon("src/allergens/images/sesame.png"));
            iconMap.put("12", new ImageIcon("src/allergens/images/sulphurdioxide.png"));
            iconMap.put("13", new ImageIcon("src/allergens/images/lupin.png"));
            iconMap.put("14", new ImageIcon("src/allergens/images/molluscs.png"));
            
            mealNumber.setText(part[0]);
            mealDescription.setText((part[1].compareTo("null") == 0) ? "" : part[1]);
            String allergensString = (part[2].compareTo("null") == 0) ? "" : part[2];
            
            String[] allergensArray = allergensString.split("\\s");
            allergensPanel.removeAll();
            for(String allergenNumber : allergensArray)
            {
                if(iconMap.containsKey(allergenNumber))
                {
                    allergensPanel.add(new JLabel(" "));
                    allergensPanel.add(new JLabel(iconMap.get(allergenNumber)));
                }
            }
            
            
            if(mealDescription.getText().compareTo("") == 0 || isPrinted)
                setEnabled(false);
            else
                setEnabled(true);
            
        this.setBorder(BorderFactory.createMatteBorder(0, 0, 1, 0, new Color(204,204,204)));
        
        if(isSelected && isEnabled())
        {
            this.setBackground(new Color(51,154,255,255));
            jPanel1.setBackground(new Color(156,206,255,255));
        }
        else
        {
            this.setBackground(new Color(255,255,255,0));
            jPanel1.setBackground(new Color(156,206,255,0));
        }
        
        if(!isEnabled())
        {
            mealNumber.setForeground(Color.LIGHT_GRAY);
            mealDescription.setForeground(Color.LIGHT_GRAY);
            allergensPanel.setForeground(Color.LIGHT_GRAY);
        }
        else
        {
            mealNumber.setForeground(Color.BLACK);
            mealDescription.setForeground(Color.BLACK);
            allergensPanel.setForeground(Color.BLACK);
        }
        
        if(isPrinted && index == selectedIndex)
        {
            this.setBackground(new Color(200,230,255,255));
            jPanel1.setBackground(new Color(225,242,255,255));
        }
        
        return this;
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        mealNumber = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        mealDescription = new javax.swing.JTextArea();
        allergensPanel = new javax.swing.JPanel();

        setBackground(new java.awt.Color(0,0,0,0));
        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.LINE_AXIS));

        jPanel2.setBackground(new java.awt.Color(255,255,255,0));
        jPanel2.setLayout(new java.awt.BorderLayout());

        mealNumber.setBackground(new java.awt.Color(0,0,0,0));
        mealNumber.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        mealNumber.setText("jLabel1");
        jPanel2.add(mealNumber, java.awt.BorderLayout.CENTER);

        add(jPanel2);

        jPanel1.setBackground(new java.awt.Color(0,0,0,0)
        );
        jPanel1.setBorder(javax.swing.BorderFactory.createMatteBorder(0, 1, 0, 1, new java.awt.Color(153, 153, 153)));
        jPanel1.setLayout(new java.awt.BorderLayout());

        mealDescription.setEditable(false);
        mealDescription.setBackground(new java.awt.Color(255,255,255,0));
        mealDescription.setColumns(20);
        mealDescription.setLineWrap(true);
        mealDescription.setRows(4);
        mealDescription.setWrapStyleWord(true);
        mealDescription.setAutoscrolls(false);
        mealDescription.setBorder(javax.swing.BorderFactory.createEmptyBorder(3, 3, 3, 3));
        jPanel1.add(mealDescription, java.awt.BorderLayout.PAGE_START);

        allergensPanel.setOpaque(false);
        allergensPanel.setPreferredSize(new java.awt.Dimension(100, 20));
        allergensPanel.setLayout(new javax.swing.BoxLayout(allergensPanel, javax.swing.BoxLayout.LINE_AXIS));
        jPanel1.add(allergensPanel, java.awt.BorderLayout.PAGE_END);

        add(jPanel1);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel allergensPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextArea mealDescription;
    private javax.swing.JLabel mealNumber;
    // End of variables declaration//GEN-END:variables
}
